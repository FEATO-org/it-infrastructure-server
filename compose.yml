version: '3.8'
services:
  sfs-discord-server:
    image: ghcr.io/feato-org/support-feato-system:main
    env_file: .env
    networks:
      - sfs-network
    deploy:
      resources:
        limits:
          memory: 12M
    logging:
      options:
        max-size: 10m

  minecraft-server-1:
    image: itzg/minecraft-server:java17-openj9
    environment:
      MEMORY: ""
      JVM_XX_OPTS: "-XX:MaxRAMPercentage=75"
      TYPE: PAPER
      USE_AIKAR_FLAGS: "TRUE"
      EULA: "TRUE"
      VERSION: LATEST
      GAMEMODE: survival
      DIFFICULTY: normal
      SERVER_NAME: FEATO
      PLAYER_IDLE_TIMEOUT: 90
      TZ: Asia/Tokyo
      SPIGET_RESOURCES: 67436,110400,19286
      MODS_FILE: /extras/mods.txt
      DATAPACKS: /extras/datapacks
      LOG_TIMESTAMP: "TRUE"
      VIRTUAL_HOST: ${MINECRAFT_HOST}
      VIRTUAL_PORT: 25565
      LETSENCRYPT_HOST: ${MINECRAFT_HOST}
      LETSENCRYPT_EMAIL: ${DEFAULT_EMAIL}
      TUNE_VIRTUALIZED: "TRUE"
      TUNE_NURSERY_SIZES: "TRUE"
      GUI: "FALSE"
      ICON: https://photo.feato.jp/_data/i/upload/2023/06/24/20230624012009-7add3e01-xl.png
    ports:
      - "25565:25565"
      - "19132:19132/udp"
      - "8123:8123"
    volumes:
      - minecraft-server-1-data-volume:/data
      # plugins download
      - ./minecraft/mods.txt:/extras/mods.txt:ro
      - ./minecraft/plugins:/plugins
      # resourcepack & datapack
      - ./minecraft/datapacks:/extras/datapacks
      # config
      - ./minecraft/config:/config
    stdin_open: true
    tty: true
    networks:
      - minecraft-network
      - nginx-network
    depends_on:
      - fluent-bit
    deploy:
      resources:
        limits:
          memory: 3.5G
      restart_policy:
        delay: 15s
    logging:
      driver: fluentd
      options:
        tag: "minecraft_server_log"

  # minecraft-backups-1:
  #   image: itzg/mc-backup
  #   env_file: .env
  #   environment:
  #     BACKUP_INTERVAL: "2h"
  #     RCON_HOST: minecraft-server-1
  #   volumes:
  #     - minecraft-server-1-data-volume:/data:ro
  #     - minecraft-backup-1-backups-volume:/backups
  #   networks:
  #     - minecraft-network

  fluent-bit:
    image: fluent/fluent-bit
    env_file: .env
    volumes:
      - ./fluentbit:/fluent-bit/etc/
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "24224:24224"
    stdin_open: true
    tty: true
    networks:
      - minecraft-network
      - sfs-network
    deploy:
      resources:
        limits:
          memory: 70M
      update_config:
        delay: 20s
    logging:
      options:
        max-size: 10m

  minecraft-monitor:
    image: itzg/mc-monitor
    command: export-for-prometheus
    environment:
      EXPORT_SERVERS: minecraft-server-1
      DEBUG: "true"
    networks:
      - minecraft-network
    deploy:
      resources:
        limits:
          memory: 10M
    logging:
      options:
        max-size: 10m

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - minecraft-network
      - sfs-network
    depends_on:
      - fluent-bit
    deploy:
      resources:
        limits:
          memory: 70M
    logging:
      options:
        max-size: 10m

  # portainer-agent:
  #   image: portainer/agent:2.18.3
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /var/lib/docker/volumes:/var/lib/docker/volumes
  #   networks:
  #     - portainer-network
  #   deploy:
  #     mode: global
  #     placement:
  #       constraints: [ node.platform.os == linux ]
  #   logging:
  #     options:
  #       max-size: 10m

  # portainer-host:
  #   image: portainer/portainer-ce:2.18.3
  #   command: -H tcp://tasks.agent:9001 --tlsskipverify
  #   environment:
  #     - VIRTUAL_HOST=${PORTAINER_HOST}
  #     - VIRTUAL_PORT=9443
  #     - LETSENCRYPT_HOST=${PORTAINER_HOST}
  #     - LETSENCRYPT_EMAIL=${DEFAULT_EMAIL}
  #   ports:
  #     - "9443:9443"
  #     - "9000:9000"
  #     - "8000:8000"
  #   volumes:
  #     - portainer_data:/data
  #   networks:
  #     - portainer-network
  #     - nginx-network
  #   depends_on:
  #     - nginx-proxy
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #     placement:
  #       constraints: [ node.role == manager ]
  #   logging:
  #     options:
  #       max-size: 10m

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - nginx-network
    deploy:
      resources:
        limits:
          memory: 42M
    logging:
      options:
        max-size: 10m

  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    environment:
      - ACME_CA_URI=${ACME_CA_URI}
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - NGINX_DOCKER_GEN_CONTAINER=nginx-proxy
    volumes:
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh
    networks:
      - nginx-network
    deploy:
      resources:
        limits:
          memory: 32M
    logging:
      options:
        max-size: 10m

volumes:
  minecraft-bedrock-server-1-data-volume: {}
  minecraft-server-1-data-volume: {}
  minecraft-backup-1-backups-volume: {}
  portainer_data: {}
  certs: {}
  vhost: {}
  html: {}
  acme: {}

networks:
  minecraft-network:
  sfs-network:
  portainer-network:
    driver: overlay
    attachable: true
  nginx-network:
